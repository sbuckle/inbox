---
- hosts: all
  become: yes

  vars:
    hostname: "localhost"
    domain: "{{ hostname }}"
    selector: "{{ hostname }}"
    admin_email: ""
    use_letsencrypt: true
    firewall_allowed_tcp_ports:
      - 22
      - 25
      # Certbot standalone method
      - 80
      - 465
      # Submission port
      - 587
      # IMAP over TLS
      - 993
    certbot_create_if_missing: true
    certbot_create_method: standalone
    certbot_auto_renew: true
    certbot_admin_email: "{{ admin_email }}"
    certbot_certs:
      - domains:
          - "{{ hostname }}"

  pre_tasks:
    - name: Update apt cache if needed
      apt: update_cache=yes cache_valid_time=3600

  roles:
    - { role: geerlingguy.certbot, when: use_letsencrypt }
    - geerlingguy.firewall

  tasks:
    - name: Set the hostname
      hostname:
        name: "{{ hostname }}"

    - name: Ensure directory exists for local self-signed certificate
      file:
        path: /etc/ssl/certs/postfix
        state: directory
        mode: '0755'
      when: not use_letsencrypt

    - name: Generate self-signed certificate
      command:
        cmd: openssl req -x509 -newkey rsa:4096 -keyout /etc/ssl/certs/postfix/mail.key -out /etc/ssl/certs/postfix/mail.crt -days 365 -nodes -subj "/CN=localhost"
      when: not use_letsencrypt

    - name: Get software for apt repository management
      apt:
        state: present
        name:
          - python3-apt
          - python3-pycurl

    - name: Add rspamd apt repository key
      get_url:
        url: https://rspamd.com/apt-stable/gpg.key
        dest: /etc/apt/trusted.gpg.d/rspamd.asc
        mode: '0644'
        force: true

    - name: Add rspamd apt repository
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/rspamd.asc] http://rspamd.com/apt-stable/ {{ ansible_distribution_release }} main"
        state: present

    - name: Install required packages
      apt:
        name:
          - postfix
          - dovecot-imapd
          - dovecot-lmtpd
          - dovecot-sieve
          - rspamd
          - opendkim
          - opendkim-tools
          - postfix-policyd-spf-python
        state: present

    - name: Check to see if the DH parameters file exists
      stat: "path=/etc/postfix/dh2048.pem"
      register: dh_params_file

    - name: Generate the DH parameters file
      command: "openssl dhparam -out /etc/postfix/dh2048.pem 2048"
      when: not dh_params_file.stat.exists

    - name: Set Postfix default configuration
      lineinfile:
        dest: "/etc/postfix/main.cf"
        regexp: "{{ item.regexp }}"
        line: "{{ item.value }}"
        state: present
      with_items:
        - regexp: "^myhostname"
          value: "myhostname = {{ hostname }}"
        - regexp: "^mydestination"
          value: "mydestination = {{ domain }}"
        - regexp: "^disable_vrfy_command"
          value: "disable_vrfy_command = yes"
        - regexp: "^smtpd_tls_cert_file"
          value: "smtpd_tls_cert_file = {{ '/etc/letsencrypt/live/{{ hostname }}/fullchain.pem' if use_letsencrypt else '/etc/ssl/certs/postfix/mail.crt' }}"
        - regexp: "^smtpd_tls_key_file"
          value: "smtpd_tls_key_file = {{ '/etc/letsencrypt/live/{{ hostname }}/privkey.pem' if use_letsencrypt else '/etc/ssl/certs/postfix/mail.key' }}"
        - regexp: "^smtpd_milters"
          value: "smtpd_milters = inet:localhost:8891 inet:localhost:11332"
        - regexp: "^milter_default_action"
          value: "milter_default_action = accept"
        - regexp: "^smtpd_tls_auth_only"
          value: "smtpd_tls_auth_only = yes"
        - regexp: "^smtpd_tls_mandatory_protocols"
          value: "smtpd_tls_mandatory_protocols = !SSLv2, !SSLv3, !TLSv1, !TLSv1.1"
        - regexp: "^smtpd_tls_protocols"
          value: "smtpd_tls_protocols = !SSLv2, !SSLv3, !TLSv1, !TLSv1.1"
        - regexp: "^smtpd_tls_mandatory_ciphers"
          value: "smtpd_tls_mandatory_ciphers = medium"
        - regexp: "^tls_preempt_cipherlist"
          value: "tls_preempt_cipherlist = no"
        - regexp: "^smtpd_tls_dh1024_param_file"
          value: "smtpd_tls_dh1024_param_file = /etc/postfix/dh2048.pem"
        - regexp: "^tls_medium_cipherlist"
          value: "tls_medium_cipherlist = ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"
        - regexp: "^policy-spf_time_limit"
          value: "policy-spf_time_limit = 3600"
        - regexp: "^smtpd_recipient_restrictions"
          value: "smtpd_recipient_restrictions = permit_mynetworks, permit_sasl_authenticated, reject_unauth_destination, check_policy_service unix:private/policy-spf"
        - regexp: "^mailbox_transport"
          value: "mailbox_transport = lmtp:unix:private/dovecot-lmtp"
      notify: restart postfix

    - name: Enable Postfix smtp-auth
      copy:
        src: "files/dovecot/99-local-auth.conf"
        dest: "/etc/dovecot/conf.d/99-local-auth.conf"
        owner: root
        group: root
        mode: 0644
      notify: restart dovecot

    - name: Enable Dovecot LMTP
      copy:
        src: "files/dovecot/99-local-lmtp.conf"
        dest: "/etc/dovecot/conf.d/99-local-lmtp.conf"
        owner: root
        group: root
        mode: 0644
      notify: restart dovecot

    - name: Configure certificate settings for dovecot
      copy:
        content: |
          ssl_cert = <{{ '/etc/letsencrypt/live/{{ hostname }}/fullchain.pem' if use_letsencrypt else '/etc/ssl/certs/postfix/mail.crt' }}
          ssl_key = <{{ '/etc/letsencrypt/live/{{ hostname }}/privkey.pem' if use_letsencrypt else '/etc/ssl/certs/postfix/mail.key' }}
        dest: /etc/dovecot/conf.d/99-local-ssl.conf
      notify: restart dovecot

    - name: Setup submission and smtps port
      blockinfile:
        state: present
        insertafter: EOF
        dest: /etc/postfix/master.cf
        content: |
          smtps inet n       -       y       -       -       smtpd
             -o syslog_name=postfix/smtps
             -o smtpd_tls_wrappermode=yes
             -o smtpd_sasl_auth_enable=yes
             -o smtpd_sasl_type=dovecot
             -o smtpd_sasl_path=private/auth
             -o smtpd_sasl_security_options=noanonymous
             -o smtpd_reject_unlisted_recipient=no
             -o smtpd_relay_restrictions=permit_sasl_authenticated,reject
          submission inet n       -       y       -       -       smtpd
             -o syslog_name=postfix/submission
             -o smtpd_tls_security_level=encrypt
             -o smtpd_sasl_auth_enable=yes
             -o smtpd_sasl_type=dovecot
             -o smtpd_sasl_path=private/auth
             -o smtpd_sasl_security_options=noanonymous
             -o smtpd_tls_auth_only=yes
             -o smtpd_reject_unlisted_recipient=no
             -o smtpd_relay_restrictions=permit_sasl_authenticated,reject
          policy-spf unix  -       n       n       -       -       spawn
              user=nobody argv=/usr/bin/policyd-spf
      notify: restart postfix

    - name: Create the directory (if it doesn't exist) for the DKIM signing keys
      file:
        state: directory
        path: /etc/dkimkeys
        owner: opendkim
        group: opendkim
        mode: '0700'

    - name: Check to see if the signing key already exists
      stat: "path=/etc/dkimkeys/{{ selector }}.private"
      register: signing_key_file

    - name: Generate the signing keys
      command: "opendkim-genkey -D /etc/dkimkeys -s {{ selector }}"
      when: not signing_key_file.stat.exists

    - name: Change key permissions
      file:
        path: "/etc/dkimkeys/{{ selector }}.private"
        owner: opendkim
        group: opendkim

    - name: Modify DKIM configuration
      blockinfile:
        insertafter: EOF
        dest: /etc/opendkim.conf
        content: |
          Mode                   sv
          Domain                 {{ domain }}
          Selector               {{ selector }}
          KeyFile                /etc/dkimkeys/{{ selector }}.private
      notify: restart opendkim

    - name: Change DKIM socket setting
      lineinfile:
        dest: /etc/opendkim.conf
        regexp: "^Socket"
        line: "Socket                  inet:8891@localhost"
        state: present
      notify: restart opendkim

    - name: LetsEncrypt post renewal script
      copy:
        src: "files/letsencrypt/reload_mail"
        dest: "/etc/letsencrypt/renewal-hooks/post/reload_mail"
        owner: root
        group: root
        mode: 0750
      when: use_letsencrypt

  handlers:
    - name: restart postfix
      service: name=postfix state=restarted

    - name: restart dovecot
      service: name=dovecot state=restarted

    - name: restart opendkim
      service: name=opendkim state=restarted